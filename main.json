{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.24.24.22086",
      "templateHash": "18319204271725260039"
    }
  },
  "parameters": {
    "envName": {
      "type": "string",
      "defaultValue": "nef",
      "metadata": {
        "description": "suffix to use for names in different environments"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "environment": "[parameters('envName')]",
        "dveleopedBy": "ilya",
        "project": "playground"
      },
      "metadata": {
        "description": "Tags"
      }
    }
  },
  "variables": {
    "projectName": "ilyatest",
    "appServicePlanName": "[format('{0}-asp-{1}', variables('projectName'), parameters('envName'))]",
    "webAppName": "[format('{0}apiwebapp{1}', variables('projectName'), parameters('envName'))]",
    "webhookName": "[format('{0}webhook{1}', variables('webAppName'), parameters('envName'))]",
    "appServiceSkuName": "B1",
    "appServiceSkuTier": "Basic",
    "imageName": "[format('{0}:latest', variables('projectName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true,
        "perSiteScaling": false
      },
      "sku": {
        "name": "[variables('appServiceSkuName')]",
        "tier": "[variables('appServiceSkuTier')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[format('vnet-{0}-{1}', variables('projectName'), parameters('envName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.6.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "apps",
            "properties": {
              "addressPrefix": "10.6.0.0/24",
              "delegations": [
                {
                  "name": "Microsoft.Web/serverFarms",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          },
          {
            "name": "privatelink",
            "properties": {
              "addressPrefix": "10.6.1.0/24"
            }
          },
          {
            "name": "functions",
            "properties": {
              "addressPrefix": "10.6.2.0/24",
              "delegations": [
                {
                  "name": "Microsoft.Web/serverFarms",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2020-11-01-preview",
      "name": "[format('{0}{1}', variables('projectName'), parameters('envName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "siteConfig": {
          "appSettings": [],
          "acrUseManagedIdentityCreds": true,
          "linuxFxVersion": "[format('DOCKER|{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('projectName'), parameters('envName'))), '2020-11-01-preview').loginServer, variables('imageName'))]"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}-{1}', variables('projectName'), parameters('envName'))), '2021-02-01').subnets[0].id]",
        "httpsOnly": true
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": "[parameters('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('projectName'), parameters('envName')))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}-{1}', variables('projectName'), parameters('envName')))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/webhooks",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}/{1}', format('{0}{1}', variables('projectName'), parameters('envName')), variables('webhookName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "actions": [
          "push"
        ],
        "status": "enabled",
        "scope": "[variables('imageName')]",
        "serviceUri": "[format('{0}/api/registry/webhook', list(resourceId('Microsoft.Web/sites/config', split(format('{0}/publishingcredentials', variables('webAppName')), '/')[0], split(format('{0}/publishingcredentials', variables('webAppName')), '/')[1]), '2022-03-01').properties.scmUri)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('projectName'), parameters('envName')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('{0}{1}', variables('projectName'), parameters('envName')))]",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Web/sites', variables('webAppName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7'), parameters('envName'), parameters('envName'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2021-01-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}{1}', variables('projectName'), parameters('envName')))]",
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    }
  ]
}