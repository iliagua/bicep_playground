{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "14067759706698762774"
    }
  },
  "parameters": {
    "envName": {
      "type": "string",
      "defaultValue": "ilyatest",
      "metadata": {
        "description": "suffix to use for names in different environments"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appServiceSkuName": {
      "type": "string",
      "defaultValue": "B1"
    },
    "appServiceSkuTier": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "imageName": {
      "type": "string",
      "defaultValue": "blaqdservices:latest"
    },
    "appStorageAccountSkuName": {
      "type": "string",
      "defaultValue": "Standard_RAGRS"
    },
    "functionStorageAccountSkuName": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "functionAppNameSkuName": {
      "type": "string",
      "defaultValue": "Y1"
    },
    "functionAppNameSkuTier": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "environment": "[parameters('envName')]",
        "dveleopedBy": "ilya",
        "repo": "tbd",
        "project": "blaqd"
      },
      "metadata": {
        "description": "Tags"
      }
    }
  },
  "variables": {
    "projectName": "blaqd",
    "appServicePlanName": "[format('{0}-asp-{1}', variables('projectName'), parameters('envName'))]",
    "webAppName": "[format('{0}apiwebapp{1}', variables('projectName'), parameters('envName'))]",
    "webhookName": "[format('{0}webhook{1}', variables('webAppName'), parameters('envName'))]",
    "registryName": "[format('{0}acr{1}', variables('projectName'), parameters('envName'))]",
    "appStorageAccountName": "[format('{0}appstorage{1}', variables('projectName'), parameters('envName'))]",
    "functionAppName": "[format('{0}funcapp{1}', variables('projectName'), parameters('envName'))]",
    "functionAppServicePlanName": "[format('{0}-func-asp-{1}', variables('projectName'), parameters('envName'))]",
    "functionStorageAccountName": "[format('{0}funcstorage{1}', variables('projectName'), parameters('envName'))]",
    "applicationInsightsName": "[format('{0}appinsights{1}', variables('projectName'), parameters('envName'))]",
    "notificationNamespaceName": "[format('ntfns-{0}-{1}', variables('projectName'), parameters('envName'))]",
    "clientName": "[format('ntf-{0}-client-{1}', variables('projectName'), parameters('envName'))]",
    "driverName": "[format('ntf-{0}-driver-{1}', variables('projectName'), parameters('envName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "[parameters('appServiceSkuName')]",
        "tier": "[parameters('appServiceSkuTier')]"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2020-11-01-preview",
      "name": "[variables('registryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "siteConfig": {
          "appSettings": [],
          "acrUseManagedIdentityCreds": true,
          "linuxFxVersion": "[format('DOCKER|{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', variables('registryName')), '2020-11-01-preview').loginServer, parameters('imageName'))]"
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": "[parameters('tags')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('registryName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/webhooks",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}/{1}', variables('registryName'), variables('webhookName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "actions": [
          "push"
        ],
        "status": "enabled",
        "scope": "[parameters('imageName')]",
        "serviceUri": "[format('{0}/api/registry/webhook', list(resourceId('Microsoft.Web/sites/config', split(format('{0}/publishingcredentials', variables('webAppName')), '/')[0], split(format('{0}/publishingcredentials', variables('webAppName')), '/')[1]), '2021-01-01').properties.scmUri)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('registryName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('appStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appStorageAccountSkuName')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('appStorageAccountName'))]",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Web/sites', variables('webAppName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2021-01-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]",
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('functionAppServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('functionAppNameSkuName')]",
        "tier": "[parameters('functionAppNameSkuTier')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('functionStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('functionStorageAccountSkuName')]"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node18"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('functionStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('functionStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.NotificationHubs/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('notificationNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free"
      }
    },
    {
      "type": "Microsoft.NotificationHubs/namespaces/notificationHubs",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/{1}', variables('notificationNamespaceName'), variables('clientName'))]",
      "location": "[parameters('location')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.NotificationHubs/namespaces', variables('notificationNamespaceName'))]"
      ]
    },
    {
      "type": "Microsoft.NotificationHubs/namespaces/notificationHubs",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/{1}', variables('notificationNamespaceName'), variables('driverName'))]",
      "location": "[parameters('location')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.NotificationHubs/namespaces', variables('notificationNamespaceName'))]"
      ]
    }
  ]
}